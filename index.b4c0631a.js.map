{"mappings":"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","sources":["node_modules/body-scroll-lock/lib/bodyScrollLock.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.bodyScrollLock = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  // Older browsers don't support event options, feature detect it.\n\n  // Adopted and modified solution from Bohdan Didukh (2017)\n  // https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\n  var hasPassiveEvents = false;\n  if (typeof window !== 'undefined') {\n    var passiveTestOptions = {\n      get passive() {\n        hasPassiveEvents = true;\n        return undefined;\n      }\n    };\n    window.addEventListener('testPassive', null, passiveTestOptions);\n    window.removeEventListener('testPassive', null, passiveTestOptions);\n  }\n\n  var isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\n  var locks = [];\n  var documentListenerAdded = false;\n  var initialClientY = -1;\n  var previousBodyOverflowSetting = void 0;\n  var previousBodyPosition = void 0;\n  var previousBodyPaddingRight = void 0;\n\n  // returns true if `el` should be allowed to receive touchmove events.\n  var allowTouchMove = function allowTouchMove(el) {\n    return locks.some(function (lock) {\n      if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n        return true;\n      }\n\n      return false;\n    });\n  };\n\n  var preventDefault = function preventDefault(rawEvent) {\n    var e = rawEvent || window.event;\n\n    // For the case whereby consumers adds a touchmove event listener to document.\n    // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n    // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n    // the touchmove event on document will break.\n    if (allowTouchMove(e.target)) {\n      return true;\n    }\n\n    // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n    if (e.touches.length > 1) return true;\n\n    if (e.preventDefault) e.preventDefault();\n\n    return false;\n  };\n\n  var setOverflowHidden = function setOverflowHidden(options) {\n    // If previousBodyPaddingRight is already set, don't set it again.\n    if (previousBodyPaddingRight === undefined) {\n      var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n      var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n      if (_reserveScrollBarGap && scrollBarGap > 0) {\n        var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n        previousBodyPaddingRight = document.body.style.paddingRight;\n        document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n      }\n    }\n\n    // If previousBodyOverflowSetting is already set, don't set it again.\n    if (previousBodyOverflowSetting === undefined) {\n      previousBodyOverflowSetting = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n    }\n  };\n\n  var restoreOverflowSetting = function restoreOverflowSetting() {\n    if (previousBodyPaddingRight !== undefined) {\n      document.body.style.paddingRight = previousBodyPaddingRight;\n\n      // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n      // can be set again.\n      previousBodyPaddingRight = undefined;\n    }\n\n    if (previousBodyOverflowSetting !== undefined) {\n      document.body.style.overflow = previousBodyOverflowSetting;\n\n      // Restore previousBodyOverflowSetting to undefined\n      // so setOverflowHidden knows it can be set again.\n      previousBodyOverflowSetting = undefined;\n    }\n  };\n\n  var setPositionFixed = function setPositionFixed() {\n    return window.requestAnimationFrame(function () {\n      // If previousBodyPosition is already set, don't set it again.\n      if (previousBodyPosition === undefined) {\n        previousBodyPosition = {\n          position: document.body.style.position,\n          top: document.body.style.top,\n          left: document.body.style.left\n        };\n\n        // Update the dom inside an animation frame \n        var _window = window,\n            scrollY = _window.scrollY,\n            scrollX = _window.scrollX,\n            innerHeight = _window.innerHeight;\n\n        document.body.style.position = 'fixed';\n        document.body.style.top = -scrollY;\n        document.body.style.left = -scrollX;\n\n        setTimeout(function () {\n          return window.requestAnimationFrame(function () {\n            // Attempt to check if the bottom bar appeared due to the position change\n            var bottomBarHeight = innerHeight - window.innerHeight;\n            if (bottomBarHeight && scrollY >= innerHeight) {\n              // Move the content further up so that the bottom bar doesn't hide it\n              document.body.style.top = -(scrollY + bottomBarHeight);\n            }\n          });\n        }, 300);\n      }\n    });\n  };\n\n  var restorePositionSetting = function restorePositionSetting() {\n    if (previousBodyPosition !== undefined) {\n      // Convert the position from \"px\" to Int\n      var y = -parseInt(document.body.style.top, 10);\n      var x = -parseInt(document.body.style.left, 10);\n\n      // Restore styles\n      document.body.style.position = previousBodyPosition.position;\n      document.body.style.top = previousBodyPosition.top;\n      document.body.style.left = previousBodyPosition.left;\n\n      // Restore scroll\n      window.scrollTo(x, y);\n\n      previousBodyPosition = undefined;\n    }\n  };\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n  var isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n    return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n  };\n\n  var handleScroll = function handleScroll(event, targetElement) {\n    var clientY = event.targetTouches[0].clientY - initialClientY;\n\n    if (allowTouchMove(event.target)) {\n      return false;\n    }\n\n    if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n      // element is at the top of its scroll.\n      return preventDefault(event);\n    }\n\n    if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n      // element is at the bottom of its scroll.\n      return preventDefault(event);\n    }\n\n    event.stopPropagation();\n    return true;\n  };\n\n  var disableBodyScroll = exports.disableBodyScroll = function disableBodyScroll(targetElement, options) {\n    // targetElement must be provided\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n      return;\n    }\n\n    // disableBodyScroll must not have been called on this targetElement before\n    if (locks.some(function (lock) {\n      return lock.targetElement === targetElement;\n    })) {\n      return;\n    }\n\n    var lock = {\n      targetElement: targetElement,\n      options: options || {}\n    };\n\n    locks = [].concat(_toConsumableArray(locks), [lock]);\n\n    if (isIosDevice) {\n      setPositionFixed();\n    } else {\n      setOverflowHidden(options);\n    }\n\n    if (isIosDevice) {\n      targetElement.ontouchstart = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          initialClientY = event.targetTouches[0].clientY;\n        }\n      };\n      targetElement.ontouchmove = function (event) {\n        if (event.targetTouches.length === 1) {\n          // detect single touch.\n          handleScroll(event, targetElement);\n        }\n      };\n\n      if (!documentListenerAdded) {\n        document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n        documentListenerAdded = true;\n      }\n    }\n  };\n\n  var clearAllBodyScrollLocks = exports.clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n    if (isIosDevice) {\n      // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n      locks.forEach(function (lock) {\n        lock.targetElement.ontouchstart = null;\n        lock.targetElement.ontouchmove = null;\n      });\n\n      if (documentListenerAdded) {\n        document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n        documentListenerAdded = false;\n      }\n\n      // Reset initial clientY.\n      initialClientY = -1;\n    }\n\n    if (isIosDevice) {\n      restorePositionSetting();\n    } else {\n      restoreOverflowSetting();\n    }\n\n    locks = [];\n  };\n\n  var enableBodyScroll = exports.enableBodyScroll = function enableBodyScroll(targetElement) {\n    if (!targetElement) {\n      // eslint-disable-next-line no-console\n      console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n      return;\n    }\n\n    locks = locks.filter(function (lock) {\n      return lock.targetElement !== targetElement;\n    });\n\n    if (isIosDevice) {\n      targetElement.ontouchstart = null;\n      targetElement.ontouchmove = null;\n\n      if (documentListenerAdded && locks.length === 0) {\n        document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n        documentListenerAdded = false;\n      }\n    }\n\n    if (isIosDevice) {\n      restorePositionSetting();\n    } else {\n      restoreOverflowSetting();\n    }\n  };\n});\n\n"],"names":["global","factory","define","amd","exports","mod","bodyScrollLock","this","Object","defineProperty","value","hasPassiveEvents","window","passiveTestOptions","passive","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPosition","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","length","restoreOverflowSetting","undefined","document","body","style","paddingRight","overflow","restorePositionSetting","y","parseInt","top","x","left","position","scrollTo","disableBodyScroll","targetElement","lock1","concat","arr","Array","isArray","i","arr2","from","_toConsumableArray","requestAnimationFrame","_window","scrollY","scrollX","innerHeight","setTimeout","bottomBarHeight","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","getComputedStyle","getPropertyValue","setOverflowHidden","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","console","error","clearAllBodyScrollLocks","forEach","enableBodyScroll","filter"],"version":3,"file":"index.b4c0631a.js.map"}